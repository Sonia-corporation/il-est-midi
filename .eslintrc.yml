root: true
env:
  es6: true
  node: true
  jest/globals: true
extends:
  - 'eslint:recommended'
  - google
  - 'plugin:@typescript-eslint/eslint-recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
  - 'plugin:import/errors'
  - 'plugin:import/warnings'
  - 'plugin:import/typescript'
  - 'plugin:jsdoc/recommended'
  - 'plugin:prettier/recommended'
  - 'plugin:rxjs/recommended'
globals:
  Atomics: readonly
  SharedArrayBuffer: readonly
  createInstance: readonly
parserOptions:
  ecmaVersion: 2018
  sourceType: module
  project:
    - './tsconfig.*?.json'
parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint'
  - typescript-sort-keys
  - jest
  - prettier
  - progress
  - jsdoc
  - import
  - rxjs
settings:
  import/extensions:
    - .js
    - .mjs
    - .cjs
    - .ts
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
  import/cache:
    lifetime: Infinity
  import/resolver:
    typescript:
      alwaysTryTypes: true
      project:
        - './tsconfig.app.json'
        - './tsconfig.spec.json'
  jsdoc:
    mode: typescript
rules:
  progress/activate: 1
  no-new-native-nonconstructor: error
  no-empty-static-block: error
  no-constant-binary-expression: error
  import/no-named-default: error
  import/no-default-export: error
  import/no-relative-packages: error
  import/prefer-default-export: off
  import/no-named-export: off
  no-restricted-imports:
    - error
    - patterns:
        - message: 'Use instead firebase-admin/'
          group:
            - 'firebase-admin/lib/*'
  '@typescript-eslint/member-ordering':
    - error
    - default:
        - signature
        - public-static-field
        - protected-static-field
        - private-static-field
        - public-static-method
        - protected-static-method
        - private-static-method
        - public-abstract-field
        - protected-abstract-field
        - private-abstract-field
        - public-instance-field
        - protected-instance-field
        - private-instance-field
        - public-constructor
        - protected-constructor
        - private-constructor
        - public-instance-method
        - protected-instance-method
        - private-instance-method
        - public-abstract-method
        - protected-abstract-method
        - private-abstract-method
  typescript-sort-keys/interface:
    - error
    - asc
    - caseSensitive: true
      natural: true
  typescript-sort-keys/string-enum:
    - error
    - asc
    - caseSensitive: true
      natural: true
  quotes: off
  no-else-return:
    - error
    - allowElseIf: true
  sort-keys:
    - error
    - asc
    - caseSensitive: true
      natural: true
      minKeys: 2
  '@typescript-eslint/quotes':
    - error
    - backtick
  '@typescript-eslint/no-var-requires': off
  '@typescript-eslint/explicit-function-return-type': off
  '@typescript-eslint/no-unused-vars':
    - error
    - argsIgnorePattern: ^_
  import/no-namespace: off
  import/first: error
  import/exports-last: error
  import/no-duplicates: error
  import/no-commonjs: error
  import/no-dynamic-require: error
  import/order:
    - error
    - groups:
        - index
        - sibling
        - parent
        - internal
        - external
        - builtin
        - object
      newlines-between: never
      alphabetize:
        order: asc
        caseInsensitive: false
  indent: off
  # Prefer import/no-duplicates
  no-duplicate-imports: off
  sort-imports: off
  new-cap:
    - error
    - capIsNewExceptions:
        - StoreConfig
  '@typescript-eslint/naming-convention':
    - error
    - selector: default
      format:
        - camelCase
    - selector: variable
      format:
        - camelCase
        - UPPER_CASE
    - selector: variable
      types:
        - boolean
      format:
        - PascalCase
        - UPPER_CASE
      prefix:
        - is
        - has
        - should
        - contains
        - as
        - to
    - selector: parameter
      format:
        - camelCase
      leadingUnderscore: allow
    - selector: parameter
      types:
        - boolean
      format:
        - PascalCase
      leadingUnderscore: allow
      prefix:
        - is
        - has
        - should
        - contains
        - as
        - to
    - selector: function
      format:
        - camelCase
    - selector: memberLike
      modifiers:
        - private
      format:
        - camelCase
      leadingUnderscore: require
    - selector: memberLike
      modifiers:
        - protected
      format:
        - camelCase
      leadingUnderscore: require
    - selector: typeLike
      format:
        - PascalCase
    - selector: typeParameter
      format:
        - PascalCase
      prefix:
        - T
    - selector: interface
      format:
        - PascalCase
      prefix:
        - I
    - selector: typeAlias
      format:
        - PascalCase
      prefix:
        - I
    - selector: enumMember
      format:
        - UPPER_CASE
    - selector: enum
      format:
        - PascalCase
      suffix:
        - Enum
    - selector: objectLiteralProperty
      format: null
  '@typescript-eslint/no-explicit-any':
    - error
    - fixToUnknown: false
      ignoreRestArgs: false
  object-curly-spacing:
    - error
    - always
  linebreak-style: off
  computed-property-spacing:
    - error
    - never
  array-bracket-spacing: off
  prefer-rest-params: off
  require-jsdoc: off
  max-len: off
  comma-dangle: off
  object-shorthand:
    - error
    - always
    - avoidExplicitReturnArrows: true
  arrow-body-style:
    - error
    - as-needed
    - requireReturnForObjectLiteral: true
  no-dupe-else-if: error
  no-unmodified-loop-condition: error
  no-eval: error
  no-extra-label: error
  no-await-in-loop: error
  prefer-destructuring:
    - error
    - VariableDeclarator:
        array: true
        object: true
      AssignmentExpression:
        array: true
        object: true
    - enforceForRenamedProperties: false
  '@typescript-eslint/unbound-method': off
  '@typescript-eslint/no-unsafe-call': off
  '@typescript-eslint/no-unsafe-member-access': off
  '@typescript-eslint/no-unsafe-return': off
  '@typescript-eslint/no-unsafe-assignment': off
  '@typescript-eslint/prefer-enum-initializers': error
  '@typescript-eslint/prefer-literal-enum-member': off
  '@typescript-eslint/unified-signatures': error
  '@typescript-eslint/ban-ts-comment': error
  no-undef-init: error
  no-magic-numbers: off
  '@typescript-eslint/no-magic-numbers': error
  prettier/prettier:
    - error
    - printWidth: 120
      useTabs: false
      semi: true
      singleQuote: true
      quoteProps: consistent
      trailingComma: es5
      bracketSpacing: true
      arrowParens: always
      endOfLine: auto
      tabWidth: 2
  import/no-unresolved: error
  prefer-template: error
  no-useless-concat: error
  no-native-reassign: error
  no-global-assign: error
  no-param-reassign: error
  no-constant-condition:
    - error
    - checkLoops: true
  prefer-promise-reject-errors:
    - error
    - allowEmptyReject: false
  no-case-declarations: error
  no-irregular-whitespace:
    - error
    - skipStrings: false
      skipComments: false
      skipRegExps: false
      skipTemplates: false
  '@typescript-eslint/adjacent-overload-signatures': error
  '@typescript-eslint/no-misused-promises':
    - error
    - checksConditionals: true
      checksVoidReturn: true
      checksSpreads: true
  no-invalid-this: off
  '@typescript-eslint/no-invalid-this': error
  prefer-const:
    - error
    - destructuring: any
      ignoreReadBeforeAssign: false
  camelcase: off
  valid-jsdoc: off
  jsdoc/require-jsdoc:
    - warn # TODO change it to error but we should fix all current jsdoc errors
    - publicOnly: true
      exemptEmptyConstructors: true
      exemptEmptyFunctions: false
      checkConstructors: false
      checkGetters: false
      checkSetters: false
      enableFixer: false # TODO change it to error but we should fix all current jsdoc errors
  curly:
    - error
    - all
  jsdoc/check-access: error
  jsdoc/check-alignment: error
  # TODO enable back once ESLint 8 is properly fixed; see https://github.com/gajus/eslint-plugin-jsdoc#check-examples
  jsdoc/check-examples: off
  jsdoc/check-indentation:
    - error
    - excludeTags:
        - param
  jsdoc/check-param-names: error
  jsdoc/check-property-names: error
  jsdoc/check-syntax: error
  jsdoc/require-param-description: error
  jsdoc/require-param-name: error
  jsdoc/require-param-type: error
  jsdoc/require-param: error
  jsdoc/require-property: error
  jsdoc/require-property-description: error
  jsdoc/require-property-name: error
  jsdoc/require-property-type: error
  jsdoc/require-returns-check: error
  jsdoc/require-returns-description: error
  jsdoc/require-returns-type: error
  jsdoc/require-returns: error
  jsdoc/sort-tags: error
  jsdoc/check-tag-names: error
  jsdoc/check-types: error
  jsdoc/check-values: error
  jsdoc/no-multi-asterisks: error
  jsdoc/require-description-complete-sentence:
    - error
    - tags:
        - see
      newlineBeforeCapsAssumesBadSentenceEnd: true
  jsdoc/require-description:
    - error
    - contexts:
        - any
      descriptionStyle: tag
      checkConstructors: false
      checkGetters: true
      checkSetters: true
  jsdoc/require-example: off
  jsdoc/require-file-overview: off
  jsdoc/multiline-blocks:
    - error
    - allowMultipleTags: true
      noMultilineBlocks: false
  jsdoc/require-hyphen-before-param-description:
    - error
    - never
  jsdoc/require-asterisk-prefix:
    - error
    - always
  jsdoc/empty-tags: error
  jsdoc/no-bad-blocks: error
  jsdoc/implements-on-classes: error
  jsdoc/newline-after-description:
    - error
    - always
  jsdoc/check-line-alignment:
    - error
    - always
  '@typescript-eslint/prefer-regexp-exec': error
  '@typescript-eslint/await-thenable': error
  '@typescript-eslint/prefer-readonly': error
  '@typescript-eslint/triple-slash-reference':
    - error
    - path: never
      types: never
      lib: never
  '@typescript-eslint/prefer-readonly-parameter-types': off
  '@typescript-eslint/no-empty-interface':
    - error
    - allowSingleExtends: false
  '@typescript-eslint/restrict-template-expressions':
    - error
    - allowNumber: false
      allowBoolean: false
      allowAny: false
      allowNullish: false
  '@typescript-eslint/ban-types':
    - error
    - types:
        Readonly:
          message: 'Sonia rule - Useless due to no-param-reassign rule'
        ReadonlyArray:
          message: 'Sonia rule - Useless due to no-param-reassign rule'
      extendDefaults: true
  '@typescript-eslint/restrict-plus-operands':
    - error
    - checkCompoundAssignments: true
  '@typescript-eslint/no-floating-promises':
    - error
    - ignoreVoid: true
  no-undef:
    - error
    - typeof: true
  no-useless-escape: error
  no-prototype-builtins: error
  require-await: off
  '@typescript-eslint/require-await': error
  no-empty-function: off
  no-var: error
  spaced-comment:
    - error
    - always
    - markers:
        - /
  '@typescript-eslint/no-empty-function':
    - error
    - allow:
        - decoratedFunctions
  padding-line-between-statements:
    - error
    - blankLine: always
      prev:
        - '*'
      next:
        - class
        - do
        - for
        - if
        - return
        - switch
        - try
    - blankLine: always
      prev:
        - block-like
        - const
        - let
        - var
      next: '*'
    - blankLine: never
      prev:
        - const
        - let
        - var
      next:
        - const
        - let
        - var
  rxjs/finnish:
    - error
    - functions: true
      methods: true
      parameters: true
      properties: true
      variables: true
      strict: true
  rxjs/no-async-subscribe: error
  rxjs/no-compat: error
  rxjs/no-create: error
  rxjs/no-explicit-generics: off
  rxjs/no-exposed-subjects:
    - error
    - allowProtected: true
  rxjs/no-ignored-error: off
  rxjs/no-ignored-notifier: error
  rxjs/no-ignored-observable: error
  rxjs/no-ignored-replay-buffer: error
  rxjs/no-ignored-subscribe: off
  rxjs/no-ignored-subscription: error
  rxjs/no-ignored-takewhile-value: error
  rxjs/no-implicit-any-catch: error
  rxjs/no-index: error
  rxjs/no-internal: error
  rxjs/no-nested-subscribe: error
  rxjs/no-topromise: off
  rxjs/no-unbound-methods: error
  rxjs/no-unsafe-subject-next: error
  rxjs/no-unsafe-takeuntil: error
  rxjs/prefer-observer: error
  rxjs/throw-error: error
  '@typescript-eslint/no-redundant-type-constituents': off
  '@typescript-eslint/no-useless-empty-export': error
  'space-before-blocks': off
  '@typescript-eslint/space-before-blocks': error
  '@typescript-eslint/no-duplicate-enum-values': error
  '@typescript-eslint/consistent-generic-constructors': error
overrides:
  - files:
      - '*.js'
      - '*.cjs'
    rules:
      '@typescript-eslint/explicit-module-boundary-types': off
      import/no-commonjs: off
  - files:
      - '*.ts'
    rules:
      '@typescript-eslint/explicit-function-return-type':
        - error
        - allowExpressions: false
          allowTypedFunctionExpressions: false
          allowHigherOrderFunctions: false
      '@typescript-eslint/no-var-requires': error
  - files:
      - '*.spec.ts'
    extends:
      - 'plugin:jest/style'
      - 'plugin:jest/all'
    rules:
      jsdoc/require-description: off
      jest/max-nested-describe: off
      jest/prefer-expect-resolves: error
      jest/prefer-to-have-length: error
      jest/no-identical-title: error
      jest/prefer-to-be: error
      jest/valid-expect-in-promise: error
      jest/prefer-comparison-matcher: error
      jest/prefer-equality-matcher: error
      jest/valid-title: error
      jest/require-hook: error
      jest/no-done-callback: error
      jest/no-disabled-tests: warn
      jest/prefer-lowercase-title:
        - error
        - ignore:
            - describe
      jest/no-hooks:
        - error
        - allow:
            - beforeAll
            - beforeEach
            - afterAll
            - afterEach
      no-magic-numbers: off
      '@typescript-eslint/no-magic-numbers': off
      '@typescript-eslint/naming-convention':
        - error
        - selector: default
          format:
            - camelCase
        - selector: variable
          format:
            - camelCase
            - UPPER_CASE
        - selector: variable
          types:
            - boolean
          format:
            - camelCase
            - UPPER_CASE
        - selector: parameter
          format:
            - camelCase
          leadingUnderscore: allow
        - selector: parameter
          types:
            - boolean
          format:
            - camelCase
          leadingUnderscore: allow
        - selector: function
          format:
            - camelCase
        - selector: memberLike
          modifiers:
            - private
          format:
            - camelCase
          leadingUnderscore: require
        - selector: memberLike
          modifiers:
            - protected
          format:
            - camelCase
          leadingUnderscore: require
        - selector: typeLike
          format:
            - PascalCase
        - selector: typeParameter
          format:
            - PascalCase
          prefix:
            - T
        - selector: interface
          format:
            - PascalCase
          prefix:
            - I
        - selector: typeAlias
          format:
            - PascalCase
          prefix:
            - I
        - selector: enumMember
          format:
            - UPPER_CASE
        - selector: enum
          format:
            - PascalCase
          suffix:
            - Enum
        - selector: objectLiteralProperty
          format: null
      '@typescript-eslint/no-explicit-any': off
      '@typescript-eslint/ban-ts-comment': off
      '@typescript-eslint/unbound-method': off # Disabled as expected by jest because it has it's own version
      jest/unbound-method: error
      padding-line-between-statements:
        - error
        - blankLine: always
          prev:
            - '*'
          next:
            - class
            - do
            - for
            - if
            - return
            - switch
            - try
        - blankLine: always
          prev:
            - block-like
          next: '*'
      rxjs/no-ignored-subscription: off
      jest/no-conditional-in-test: error
      jest/prefer-mock-promise-shorthand: error
      jest/prefer-each: error
      jest/prefer-hooks-in-order: error
      jest/max-expects: off
      jest/prefer-snapshot-hint:
        - error
        - always
