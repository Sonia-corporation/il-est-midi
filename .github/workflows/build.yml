# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
env:
  NODE_VERSION: '16.16.0'
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Cache node_modules
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint:all:ci
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Cache node_modules
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test:ci
  CoverageCodeClimate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Cache node_modules
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Coverage
        uses: paambaati/codeclimate-action@84cea27117a473d605400ca3a97fcef7e433e2d6 # tag=v3.0.0
        with:
          coverageCommand: npm run test:ci:coverage
          debug: true
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  CoverageCodecov:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Cache node_modules
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test:ci:coverage
      - name: Coverage
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # tag=v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          flags: integration
          name: Sonia-discord
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Cache node_modules
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
        env:
          CI: true
          DISCORD_SONIA_SECRET_TOKEN: ${{ secrets.DISCORD_SONIA_SECRET_TOKEN }}
          GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
          QUOTE_API_KEY: ${{ secrets.QUOTE_API_KEY }}
